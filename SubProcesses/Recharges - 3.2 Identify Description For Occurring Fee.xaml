<Activity mc:Ignorable="sap sap2010" x:Class="AfterResume" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_strInvoiceFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_strOccurringFee" Type="InArgument(x:String)" />
    <x:Property Name="in_dtInvoiceFilteredOnFee" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1410.4,3990.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>AfterResume_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.Json.Nodes</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Core.Activities.SAP</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>UiPath.UIAutomationNext.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.Text.Json</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Recharges - 3.2 Identify Description For Occurring Fee" sap:VirtualizedContainerService.HintSize="1400,3925.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtInvoiceData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtPivotDataOutput" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtModifiedFee" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Excel Application Scope - Invoice " sap:VirtualizedContainerService.HintSize="1337.6,3782.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" SensitivityOperation="None" WorkbookPath="[in_strInvoiceFilePath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1304,3672.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[dtInvoiceData]" DisplayName="Read Range - Invoice Backing Data" sap:VirtualizedContainerService.HintSize="1241.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="[in_Config(&quot;invoiceSummaryRange&quot;).ToString]" SheetName="[in_Config(&quot;InvoiceSummarySheetName&quot;).ToString]" />
            <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="7" DataTable="[dtInvoiceData]" DisplayName="Remove Empty Column" sap:VirtualizedContainerService.HintSize="1241.6,188" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_2" />
            <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="8" DataTable="[dtInvoiceData]" DisplayName="Remove Empty Column" sap:VirtualizedContainerService.HintSize="1241.6,188" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1" />
            <Assign DisplayName="Filter on Fee = occurring fee" sap:VirtualizedContainerService.HintSize="1241.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[dtInvoiceData]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[dtInvoiceData.AsEnumerable.Where(function(x) x("Fee").ToString = in_strOccurringFee).CopyToDataTable]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1241.6,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Message="[&quot;writing Data tab&quot;]" />
            <ui:ExcelWriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dtInvoiceData]" DisplayName="Write Range - Data" sap:VirtualizedContainerService.HintSize="1241.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="[in_Config(&quot;invoiceDataSheetName&quot;).ToString]" />
            <ui:InvokeVBA OutputValue="{x:Null}" CodeFilePath="[in_Config(&quot;vbaCodes&quot;).ToString]" DisplayName="Invoke VBA - CreateAndFormatPivotTable" EntryMethodName="[in_Config(&quot;vbaCreateAndFormatPivotTable&quot;).ToString]" EntryMethodParameters="[{in_Config(&quot;invoiceDataSheetName&quot;).ToString}]" sap:VirtualizedContainerService.HintSize="1241.6,88" sap2010:WorkflowViewState.IdRef="InvokeVBA_1" />
            <ui:ExcelReadRange Range="{x:Null}" AddHeaders="True" DataTable="[dtPivotDataOutput]" DisplayName="Read Range - Pivot Data Output" sap:VirtualizedContainerService.HintSize="1241.6,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="[in_Config(&quot;invoicePivotDataOutputSheetName&quot;).ToString]" />
            <If Condition="[in_dtInvoiceFilteredOnFee.AsEnumerable.Any(function(x) x(&quot;Quantity&quot;).ToString = dtPivotDataOutput.rows.Count.ToString) = true]" DisplayName="If count of rows in Pivot Data Output matches any of the Quntities for Invoice" sap:VirtualizedContainerService.HintSize="1241.6,892" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="1131.2,708.8" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="out_dtModifiedFee = New DataTable&#xA;out_dtModifiedFee = in_dtPivotDataOutput.Copy&#xA;For Each row As datarow In out_dtModifiedFee.Rows&#xA;&#x9;row(&quot;Total&quot;) = in_StrOccurringFee&#xA;Next&#xA;" DisplayName="Overwrite values from column Total with occurring fee" sap:VirtualizedContainerService.HintSize="1088,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
                    <ui:InvokeCode.Arguments>
                      <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtPivotDataOutput">
                        <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="dtPivotDataOutput" />
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_StrOccurringFee">
                        <VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_strOccurringFee" />
                      </InArgument>
                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtModifiedFee">
                        <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="dtModifiedFee" />
                      </OutArgument>
                    </ui:InvokeCode.Arguments>
                  </ui:InvokeCode>
                  <Switch x:TypeArguments="x:String" DisplayName="Switch Description" Expression="[in_dtInvoiceFilteredOnFee.AsEnumerable.Where(function(x) x(&quot;Quantity&quot;).ToString = dtPivotDataOutput.rows.Count.ToString).CopyToDataTable.rows(0)(&quot;Description&quot;).ToString]" sap:VirtualizedContainerService.HintSize="1088,414.4" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="Monthly user fee" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - Monthly User Fee" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_9" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(0)]" />
                    <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="VAT Reporting" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - VAT Reporting" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_10" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(1)]" />
                    <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="Cash iQ Product" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - Cash IQ" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_11" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(2)]" />
                    <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="Casual User Scheme" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - Casual User Scheme" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_12" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(3)]" />
                    <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="DVLA Licence checks" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - DVLA Licence checks" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_13" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(4)]" />
                    <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="Receipt Checking - Pay &amp; Reclaim" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - Receipt Checking - Pay &amp; Reclaim" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_14" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(5)]" />
                    <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="Visa to Drive" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - Visa to Drive" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_15" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(6)]" />
                  </Switch>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7" />
              </If.Else>
            </If>
            <Assign DisplayName="Filter on Total &lt;&gt; occurring fee" sap:VirtualizedContainerService.HintSize="1241.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[dtPivotDataOutput]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[dtPivotDataOutput.AsEnumerable.Where(function(x) x("Total").ToString &lt;&gt; in_strOccurringFee).CopyToDataTable]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each resulting fee" sap:VirtualizedContainerService.HintSize="1241.6,1291.2" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[dtPivotDataOutput.AsEnumerable.Select(Function(x) x(&quot;Total&quot;).ToString).ToList()]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="resultingFee" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1208,1103.2" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Filter on Total = resulting fee" sap:VirtualizedContainerService.HintSize="1164.8,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[dtPivotDataOutput]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sd:DataTable">[dtPivotDataOutput.AsEnumerable.Where(function(x) x("Total").ToString = resultingFee).CopyToDataTable]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="out_dtModifiedFee = New DataTable&#xA;out_dtModifiedFee = in_dtPivotDataOutput.Copy&#xA;For Each row As datarow In out_dtModifiedFee.Rows&#xA;&#x9;row(&quot;Total&quot;) = in_StrOccurringFee&#xA;Next&#xA;" DisplayName="Overwrite values from column Total with occurring fee" sap:VirtualizedContainerService.HintSize="1164.8,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                      <ui:InvokeCode.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtPivotDataOutput">[dtPivotDataOutput]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_StrOccurringFee">[in_strOccurringFee]</InArgument>
                        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtModifiedFee">[dtModifiedFee]</OutArgument>
                      </ui:InvokeCode.Arguments>
                    </ui:InvokeCode>
                    <If Condition="[in_dtInvoiceFilteredOnFee.AsEnumerable.Any(function(x) x(&quot;Quantity&quot;).ToString = dtPivotDataOutput.rows.Count.ToString) = true]" DisplayName="If count of rows in Pivot Data Output matches any of the Quntities for Invoice" sap:VirtualizedContainerService.HintSize="1164.8,687.2" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="1131.2,504" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Switch x:TypeArguments="x:String" DisplayName="Switch Description" Expression="[in_dtInvoiceFilteredOnFee.AsEnumerable.Where(function(x) x(&quot;Quantity&quot;).ToString = dtPivotDataOutput.rows.Count.ToString).CopyToDataTable.rows(0)(&quot;Description&quot;).ToString]" sap:VirtualizedContainerService.HintSize="1088,414.4" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="Monthly user fee" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - Monthly User Fee" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(0)]" />
                            <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="VAT Reporting" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - VAT Reporting" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(1)]" />
                            <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="Cash iQ Product" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - Cash IQ" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_4" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(2)]" />
                            <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="Casual User Scheme" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - Casual User Scheme" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_5" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(3)]" />
                            <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="DVLA Licence checks" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - DVLA Licence checks" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_6" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(4)]" />
                            <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="Receipt Checking - Pay &amp; Reclaim" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - Receipt Checking - Pay &amp; Reclaim" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_7" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(5)]" />
                            <ui:ExcelWriteRange StartingCell="{x:Null}" x:Key="Visa to Drive" AddHeaders="True" DataTable="[dtModifiedFee]" DisplayName="Write Range - Visa to Drive" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="[in_Config(&quot;listOfShortDescriptions&quot;).ToString.split(&quot;,&quot;)(6)]" />
                          </Switch>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5" />
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
  </Sequence>
</Activity>